version: '3.8'

services:
  # Redis service for testing
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main (full) test service (Python 3.11)
  test: &test
    build:
      context: .
      target: test
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/.pytest_cache
    networks:
      - default

  # Test without external dependencies
  test-native:
    build:
      context: .
      target: test-native
    volumes:
      - .:/app
      - /app/.pytest_cache

  # Fast tests
  test-fast:
    build:
      context: .
      target: test-fast
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/.pytest_cache
  
  # Watch mode for continuous testing
  test-watch:
    build:
      context: .
      target: development
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app:delegated
      - /app/.pytest_cache
    command: |
      bash -c "make test-watch"

  # Python 3.8 testing
  test-py38:
    <<: *test
    build:
      context: .
      target: test
      args:
        PYTHON_VERSION: "3.8"  # override python version

  # Python 3.9 testing
  test-py39:
    <<: *test
    build:
      context: .
      target: test
      args:
        PYTHON_VERSION: "3.9"

  # Python 3.10 testing
  test-py310:
    <<: *test
    build:
      context: .
      target: test
      args:
        PYTHON_VERSION: "3.10"
    
  # Python 3.11 testing
  test-py311:
    <<: *test
    build:
      context: .
      target: test
      args:
        PYTHON_VERSION: "3.11"

  # Python 3.12 testing
  test-py312:
    <<: *test
    build:
      context: .
      target: test
      args:
        PYTHON_VERSION: "3.12"

  # Development environment
  dev: &dev
    build:
      context: .
      target: development
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app:delegated
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true

  # Interactive development shell
  shell:
    <<: *dev
    command: bash

  # Code quality checks
  quality:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    command: |
      bash -c "make quality"

  # Coverage testing
  coverage:
    build:
      context: .
      target: development
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/.pytest_cache
      - /app/.coverage
    command: |
      bash -c "
        make test-coverage-html
      "
  # Simulated CI environment
  ci:
    build:
      context: .
      target: development
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/.pytest_cache
      - /app/.coverage
    command: |
      bash -c "make ci"

volumes:
  redis_data:
